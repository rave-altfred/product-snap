version: '3.8'

services:
  # FastAPI Backend
  backend:
    image: ${REGISTRY}/${REGISTRY_NAMESPACE}/${PROJECT_NAME}-backend:${TAG}
    container_name: ${PROJECT_NAME}-backend
    restart: unless-stopped
    ports:
      - "127.0.0.1:8000:8000"  # Only expose on localhost
    env_file:
      - .env.production
    environment:
      # Override specific values (non-secrets)
      REDIS_URL: redis://redis:6379/0
      APP_NAME: ${APP_NAME:-Light Click}
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  # Background Worker
  worker:
    image: ${REGISTRY}/${REGISTRY_NAMESPACE}/${PROJECT_NAME}-worker:${TAG}
    container_name: ${PROJECT_NAME}-worker
    restart: unless-stopped
    command: python -m app.worker
    env_file:
      - .env.production
    environment:
      # Override specific values (non-secrets)
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  # React Frontend
  frontend:
    image: ${REGISTRY}/${REGISTRY_NAMESPACE}/${PROJECT_NAME}-frontend:${TAG}
    container_name: ${PROJECT_NAME}-frontend
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:80"  # Only expose on localhost
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network

  # Redis Cache/Queue (Local instance on droplet)
  redis:
    image: redis:7-alpine
    container_name: ${PROJECT_NAME}-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    networks:
      - app-network


volumes:
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
