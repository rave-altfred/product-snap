version: '3.8'

# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  postgres:
    restart: always
    # Production: Don't expose port publicly
    ports: []
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Performance tuning
    command: postgres -c max_connections=200 -c shared_buffers=256MB -c effective_cache_size=1GB

  redis:
    restart: always
    ports: []
    # Enable persistence in production
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
      cache_from:
        - productsnap/backend:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: productsnap/backend:latest
    restart: always
    ports: []  # NGINX handles external access
    volumes: []  # Don't mount source code in production
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
    # Production logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
      cache_from:
        - productsnap/backend:latest
    image: productsnap/backend:latest
    restart: always
    volumes: []
    # Scale workers based on load
    deploy:
      replicas: 2
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      cache_from:
        - productsnap/frontend:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: productsnap/frontend:latest
    restart: always
    ports: []  # NGINX serves static files
    volumes: []
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    restart: always
    # Production: Use production config
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - certbot_data:/var/www/certbot:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  certbot:
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  certbot_data:
