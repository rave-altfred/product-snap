version: '3.8'

services:
  # FastAPI Backend
  backend:
    image: ${REGISTRY}/${REGISTRY_NAMESPACE}/${PROJECT_NAME}-backend:${TAG}
    restart: unless-stopped
    ports:
      - "127.0.0.1:8000:8000"  # Only expose on localhost
    secrets:
      - db_password
      - jwt_secret
      - paypal_client_secret
      - nano_banana_api_key
      - s3_secret_key
      - smtp_password
      - google_client_secret
    environment:
      # Non-secret configuration
      APP_NAME: ${APP_NAME:-ProductSnap}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      REDIS_URL: redis://redis:6379/0
      
      # Database (non-secret parts)
      DATABASE_URL: ${DATABASE_URL}
      # If using separate components, use:
      # DATABASE_HOST: ${DATABASE_HOST}
      # DATABASE_PORT: ${DATABASE_PORT:-5432}
      # DATABASE_NAME: ${DATABASE_NAME}
      # DATABASE_USER: ${DATABASE_USER}
      # DATABASE_PASSWORD_FILE: /run/secrets/db_password
      
      # JWT
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      JWT_REFRESH_TOKEN_EXPIRE_DAYS: ${JWT_REFRESH_TOKEN_EXPIRE_DAYS:-30}
      
      # PayPal (non-secrets)
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET_FILE: /run/secrets/paypal_client_secret
      PAYPAL_MODE: ${PAYPAL_MODE:-sandbox}
      PAYPAL_WEBHOOK_ID: ${PAYPAL_WEBHOOK_ID:-}
      PAYPAL_PLAN_ID_BASIC_MONTHLY: ${PAYPAL_PLAN_ID_BASIC_MONTHLY}
      PAYPAL_PLAN_ID_BASIC_YEARLY: ${PAYPAL_PLAN_ID_BASIC_YEARLY}
      PAYPAL_PLAN_ID_PRO_MONTHLY: ${PAYPAL_PLAN_ID_PRO_MONTHLY}
      PAYPAL_PLAN_ID_PRO_YEARLY: ${PAYPAL_PLAN_ID_PRO_YEARLY}
      
      # AI/Image Generation
      NANO_BANANA_API_KEY_FILE: /run/secrets/nano_banana_api_key
      NANO_BANANA_API_URL: ${NANO_BANANA_API_URL:-https://generativelanguage.googleapis.com}
      IMAGE_GENERATION_MODE: ${IMAGE_GENERATION_MODE:-live}
      GOOGLE_CLOUD_PROJECT_ID: ${GOOGLE_CLOUD_PROJECT_ID:-}
      USE_VERTEX_AI: ${USE_VERTEX_AI:-false}
      
      # S3/Spaces (non-secrets)
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_PUBLIC_ENDPOINT: ${S3_PUBLIC_ENDPOINT:-}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY_FILE: /run/secrets/s3_secret_key
      
      # SMTP (non-secrets)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD_FILE: /run/secrets/smtp_password
      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
      SMTP_TLS: ${SMTP_TLS:-True}
      
      # OAuth (optional)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET_FILE: /run/secrets/google_client_secret
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-}
      
      # URLs
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # Background Worker
  worker:
    image: ${REGISTRY}/${REGISTRY_NAMESPACE}/${PROJECT_NAME}-worker:${TAG}
    restart: unless-stopped
    command: python -m app.worker
    secrets:
      - db_password
      - jwt_secret
      - paypal_client_secret
      - nano_banana_api_key
      - s3_secret_key
      - smtp_password
    environment:
      # Non-secret configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      REDIS_URL: redis://redis:6379/0
      
      # Database
      DATABASE_URL: ${DATABASE_URL}
      
      # JWT
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      JWT_REFRESH_TOKEN_EXPIRE_DAYS: ${JWT_REFRESH_TOKEN_EXPIRE_DAYS:-30}
      
      # PayPal
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET_FILE: /run/secrets/paypal_client_secret
      PAYPAL_MODE: ${PAYPAL_MODE:-sandbox}
      PAYPAL_WEBHOOK_ID: ${PAYPAL_WEBHOOK_ID:-}
      PAYPAL_PLAN_ID_BASIC_MONTHLY: ${PAYPAL_PLAN_ID_BASIC_MONTHLY}
      PAYPAL_PLAN_ID_BASIC_YEARLY: ${PAYPAL_PLAN_ID_BASIC_YEARLY}
      PAYPAL_PLAN_ID_PRO_MONTHLY: ${PAYPAL_PLAN_ID_PRO_MONTHLY}
      PAYPAL_PLAN_ID_PRO_YEARLY: ${PAYPAL_PLAN_ID_PRO_YEARLY}
      
      # AI/Image Generation
      NANO_BANANA_API_KEY_FILE: /run/secrets/nano_banana_api_key
      NANO_BANANA_API_URL: ${NANO_BANANA_API_URL:-https://generativelanguage.googleapis.com}
      IMAGE_GENERATION_MODE: ${IMAGE_GENERATION_MODE:-live}
      GOOGLE_CLOUD_PROJECT_ID: ${GOOGLE_CLOUD_PROJECT_ID:-}
      USE_VERTEX_AI: ${USE_VERTEX_AI:-false}
      
      # S3/Spaces
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_PUBLIC_ENDPOINT: ${S3_PUBLIC_ENDPOINT:-}
      S3_BUCKET: ${S3_BUCKET}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY_FILE: /run/secrets/s3_secret_key
      
      # URLs
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
    depends_on:
      - redis
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  # React Frontend
  frontend:
    image: ${REGISTRY}/${REGISTRY_NAMESPACE}/${PROJECT_NAME}-frontend:${TAG}
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:80"  # Only expose on localhost
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  # Redis Cache/Queue (Local instance on droplet)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

# Docker Secrets (external - must be created before deployment)
secrets:
  db_password:
    external: true
    name: productsnap_db_password
  jwt_secret:
    external: true
    name: productsnap_jwt_secret
  paypal_client_secret:
    external: true
    name: productsnap_paypal_client_secret
  nano_banana_api_key:
    external: true
    name: productsnap_nano_banana_api_key
  s3_secret_key:
    external: true
    name: productsnap_s3_secret_key
  smtp_password:
    external: true
    name: productsnap_smtp_password
  google_client_secret:
    external: true
    name: productsnap_google_client_secret

volumes:
  redis_data:
    driver: local

networks:
  app-network:
    driver: overlay
